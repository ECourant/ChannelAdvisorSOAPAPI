<?xml version="1.0" encoding="utf-8"?>
<log4net debug="false">
  <!-- Define some output appenders -->
  <!-- Use the remoting appender -->
  <appender name="RemotingAppender" type="log4net.Appender.RemotingAppender">
    <!-- The remoting URL to the remoting server object -->
    <sink value="tcp://192.168.77.165:8085/LoggingSink" />
    <!-- Send all events, do not discard events when the buffer is full -->
    <lossy value="false" />
    <!-- The number of events to buffer before sending -->
    <bufferSize value="1" />
    <!-- Do not store event data that is slow to generate -->
    <onlyFixPartialEventData value="true" />
    <!-- Specify an evaluator to send the events immediatly under
			     certain conditions, e.g. when an error event ocurrs -->
    <evaluator type="log4net.Core.LevelEvaluator">
      <threshold value="INFO" />
    </evaluator>
  </appender>
  <appender name="FileAppender" type="log4net.Appender.FileAppender">
    <file value="ChannelAdvisorSOAP.log" />
    <appendToFile value="true" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%-4timestamp [%thread] %-5level %logger - %message%newline" />
    </layout>
  </appender>
  <appender name="CloudLogger" type="Google.Cloud.Logging.Log4Net.GoogleStackdriverAppender,Google.Cloud.Logging.Log4Net">
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%-4timestamp [%thread] %-5level %logger - %message" />
    </layout>
    <projectId value="premium-trainer-167312" />
    <logId value="ChannelAdvisorSOAP" />
  </appender>
  <!-- Setup the root category, add the appenders and set the default priority -->
  <root>
    <level value="ALL" />
    <appender-ref ref="RemotingAppender" />
    <appender-ref ref="FileAppender" />
    <appender-ref ref="CloudLogger" />
  </root>
</log4net>